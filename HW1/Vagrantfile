Vagrant.configure("2") do |config|
	config.vm.define "machine1" do |machine1|
		machine1.vm.box = "ubuntu/bionic64"
		machine1.vm.network "private_network", ip:"192.168.33.10"
		machine1.vm.synced_folder "machine1_data/", "/vagrant_data", create: true
		machine1.vm.provider "virtualbox" do |m1_vb|
			m1_vb.memory = "1024"
		end

		machine1.vm.provision "shell", privileged: true, inline: <<-SHELL
			apt-get update -y
			sed -i '0,/PasswordAuthentication no/{s/PasswordAuthentication no/PasswordAuthentication yes/}' /etc/ssh/sshd_config
			service ssh restart
		SHELL
	end
	config.vm.define "adm" do |adm|
		adm.vm.box = "ubuntu/bionic64"
		adm.vm.network "private_network", ip:"192.168.33.11"
		adm.vm.synced_folder "adm_data/", "/vagrant_data", create: true
		adm.vm.provider "virtualbox" do |adm_vb|
			adm_vb.memory = "1024"
		end
		adm.vm.provision "file", source: "./", destination: "$HOME"
		adm.vm.provision "file", source: "./", destination: "$HOME"
		adm.vm.provision "shell", privileged: true, inline: <<-SHELL
			add-apt-repository ppa:ansible/ansible -y
			apt-get update -y
			apt-get install ansible sshpass -y
		SHELL
		adm.vm.provision "shell", privileged: false, inline: <<-SHELL
			# generate keys
			ssh-keygen -t rsa -N "" -f /home/vagrant/.ssh/id_rsa -q
			# allow ssh'ing without asking for passwords
			ssh-keyscan 192.168.33.10 >> /home/vagrant/.ssh/known_hosts
			# pass key to other machine
			sshpass -p "vagrant" ssh-copy-id -i /home/vagrant/.ssh/id_rsa.pub vagrant@192.168.33.10
			# test out ansible's connection to other machine
			ansible -i hosts all -m ping
			# run ansible playbook
			ansible-playbook -i hosts hw1.yml
		SHELL
	end
end
